# Generated by Django 4.1.3 on 2022-11-11 09:27

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Animation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='动漫名称')),
                ('abstract', models.CharField(blank=True, max_length=256, null=True, verbose_name='简介')),
                ('score', models.FloatField(blank=True, null=True, verbose_name='评分')),
                ('cover', models.CharField(blank=True, max_length=256, null=True, verbose_name='海报地址')),
                ('reason', models.CharField(blank=True, max_length=128, null=True, verbose_name='推荐理由')),
            ],
            options={
                'verbose_name_plural': '动漫',
            },
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('path', models.FileField(upload_to='user_avatar/', verbose_name='用户头像路径')),
            ],
            options={
                'verbose_name_plural': '用户头像',
            },
        ),
        migrations.CreateModel(
            name='ChaCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='章节所属的分类')),
            ],
            options={
                'verbose_name_plural': '章节所属的分类',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='章节名称')),
                ('character', models.JSONField(null=True, verbose_name='章节包含的字符')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.chacategory', verbose_name='章节分类')),
            ],
            options={
                'verbose_name_plural': '章节',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nickname', models.CharField(max_length=32, verbose_name='用户名')),
                ('tel', models.CharField(blank=True, max_length=11, null=True, verbose_name='用户手机号')),
                ('mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='用户邮箱')),
                ('max_score', models.IntegerField(default=0, verbose_name='最高得分')),
                ('chapter', models.IntegerField(default=0, verbose_name='学习过的章节')),
                ('animation', models.ManyToManyField(to='app01.animation', verbose_name='喜欢的动漫')),
                ('avatar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app01.avatar', verbose_name='用户头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
